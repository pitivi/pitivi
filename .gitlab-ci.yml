---
stages:
  - docker_image
  - test
  - save_docker_image
  - deploy

variables:
  CI_NAMESPACE: "$(echo ${CI_PROJECT_NAMESPACE} | tr A-Z a-z)"
  MANIFEST: build/flatpak/org.pitivi.Pitivi.json
  DBUS_ID: org.pitivi.Pitivi
  XUNIT_PATH: ${CI_PROJECT_DIR}/xunit.xml
  GST_DEBUG_NO_COLOR: "true"
  BLACKLIST: >
    -b tests.test_effects.EffectsPropertiesManagerTest.test_dependent_properties
  IMAGE_MASTER: ${CI_REGISTRY}/${CI_NAMESPACE}/${CI_PROJECT_NAME}:master-sdk_3.34
  IMAGE_MASTER_NEXT: ${IMAGE_MASTER}-tmp
  IMAGE_1.0: ${CI_REGISTRY}/${CI_NAMESPACE}/${CI_PROJECT_NAME}:1.0-sdk_3.34


.docker_image_template:
  tags:
    - privileged
  image: docker:latest
  variables:
    DOCKER_DRIVER: overlay2
    DOCKER_TLS_CERTDIR: ""
  services:
    - docker:19.03.0-dind
  script:
    - export BASE_IMAGE="registry.gitlab.gnome.org/gnome/gnome-runtime-images/gnome:3.34"
    - export LOCAL_IMAGE="tmp-flatpak-sandbox-image"
    - export CLONE_PITIVI="git clone ${CI_PROJECT_URL}.git --single-branch \${HOME}/pitivi -b ${CI_COMMIT_REF_NAME}"
    - export BUILD_PITIVI="flatpak-builder --user --disable-rofiles-fuse ${HOME}/pitivi/app ${HOME}/pitivi/build/flatpak/org.pitivi.Pitivi.json --state-dir=\${HOME}/flatpak-cache --ccache"

    - env

    - docker run --privileged --name ${LOCAL_IMAGE} ${BASE_IMAGE} bash -c "${CLONE_PITIVI} && ${BUILD_PITIVI} && rm -Rf ${HOME}/pitivi"
    - docker commit ${LOCAL_IMAGE} ${IMAGE}
    - docker rm ${LOCAL_IMAGE}
    - docker login -u gitlab-ci-token -p $CI_JOB_TOKEN $CI_REGISTRY
    - docker push ${IMAGE}
  rules:
    - if: '$CI_PIPELINE_SOURCE == "trigger" || $CI_PIPELINE_SOURCE == "schedule"'
  retry: 1

docker_image:master:
  stage: docker_image
  extends: .docker_image_template
  variables:
    IMAGE: ${IMAGE_MASTER_NEXT}

docker_image:1.0:
  stage: docker_image
  extends: .docker_image_template
  variables:
    IMAGE: ${IMAGE_1.0}


.test_template:
  tags:
    - flatpak
  script:
    - export MANIFEST=${HOME}/pitivi/build/flatpak/org.pitivi.Pitivi.json
    - export RUN_IN_SANDBOX="flatpak-builder --disable-rofiles-fuse --filesystem=${HOME}/pitivi --filesystem=${CI_PROJECT_DIR} --env=PITIVI_DEVELOPMENT=1 --env=GST_DEBUG=2 --env=GST_DEBUG_NO_COLOR=true --run app ${MANIFEST}"
    - export FLATPAK_BUILDER_CACHE="--state-dir=${HOME}/flatpak-cache"
    - export FLATPAK_REPO="${CI_PROJECT_DIR}/flatpak_repo"

    - env

    # Working around the fact that flatpak-builder *requires* the cache dir
    # to be on the same filesystem as the build dir
    - mv ${CI_PROJECT_DIR} ${HOME}/pitivi
    - mkdir -p ${CI_PROJECT_DIR}

    - cd ${HOME}/pitivi
    - flatpak-builder --user --disable-rofiles-fuse ${FLATPAK_BUILDER_CACHE} --disable-download --ccache --repo=${FLATPAK_REPO} --force-clean app build/flatpak/org.pitivi.Pitivi.json --subject="Rolling update for pitivi master" --body="See ${CI_JOB_URL}"
    - ${RUN_IN_SANDBOX} meson mesonbuild/
    - ${RUN_IN_SANDBOX} ninja -C mesonbuild/
    - xvfb-run -n 32 -s "-screen 0 640x480x24" ${RUN_IN_SANDBOX} gst-validate-launcher $PWD/tests/ptv_testsuite.py --dump-on-failure --timeout-factor 4 --xunit-file ${XUNIT_PATH} --logs-dir=${CI_PROJECT_DIR}/tests-logs ${BLACKLIST}

    # For some reason GitLab fails to upload directories
    - cd ${CI_PROJECT_DIR}/
    - tar czf tests-logs.tar.gz tests-logs/
    - tar cf flatpak_repo.tar flatpak_repo/
  cache:
    paths:
      - flatpak-cache
  artifacts:
    expire_in: 30 days
    paths:
      - xunit.xml
      - flatpak_repo.tar
      - tests-logs.tar.gz
    reports:
      junit:
        - ${XUNIT_PATH}

test:with_new_master_image:
  stage: test
  image: ${CI_REGISTRY}/${CI_NAMESPACE}/${CI_PROJECT_NAME}:master-sdk_3.34-tmp
  extends: .test_template
  rules:
    - if: '$CI_PIPELINE_SOURCE == "trigger" || $CI_PIPELINE_SOURCE == "schedule"'
  needs:
    - job: docker_image:master

test:
  stage: test
  image: ${CI_REGISTRY}/${CI_NAMESPACE}/${CI_PROJECT_NAME}:master-sdk_3.34
  extends: .test_template
  rules:
    - if: $CI_MERGE_REQUEST_ID
    - if: $CI_COMMIT_TAG
    - if: $CI_COMMIT_BRANCH == "master"

save_docker_image:
  stage: save_docker_image
  image: docker:latest
  script:
    - docker pull ${IMAGE_MASTER_NEXT}
    - docker tag ${IMAGE_MASTER_NEXT} ${IMAGE_MASTER}
    - docker push ${IMAGE_MASTER}
  rules:
    - if: '$CI_PIPELINE_SOURCE == "trigger" || $CI_PIPELINE_SOURCE == "schedule"'
  needs:
    - job: test:with_new_master_image


deploy:
  tags:
    - PitiviBuildMachine
  stage: deploy
  script:
    - tar xf flatpak_repo.tar
    - flatpak build-commit-from --src-repo=flatpak_repo /srv/http --timestamp=NOW --gpg-sign=739E841A
  only:
    - master@GNOME/pitivi
    - 1.0@GNOME/pitivi
    - thiblahute/sdk3.34@GNOME/pitivi
